name: Build IJKPlayer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with debug logging'
        required: false
        default: false
      skip_long_steps:
        type: boolean
        description: 'Skip time-consuming steps for faster debugging'
        required: false
        default: false

env:
  GRADLE_VERSION: 6.7.1

jobs:

  build:
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git yasm make
    
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r10e
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Configure environment
      run: |
        echo "PATH=$ANDROID_SDK_ROOT/platform-tools:$PATH" >> $GITHUB_ENV
        echo "PATH=$ANDROID_SDK_ROOT/tools:$PATH" >> $GITHUB_ENV
        echo "ANDROID_NDK=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
        echo "PATH=$ANDROID_NDK_ROOT:$PATH" >> $GITHUB_ENV
      
    - name: Clone IJKPlayer
      run: git clone https://github.com/Bilibili/ijkplayer.git ijkplayer-android
      
    - name: Initialize IJKPlayer
      if: ${{ !github.event.inputs.skip_long_steps }}
      run: |
        cd ijkplayer-android
        ./init-android.sh
        ./init-android-openssl.sh
        
    - name: Build OpenSSL
      if: ${{ !github.event.inputs.skip_long_steps }}
      run: |
        cd ijkplayer-android/android/contrib
        ./compile-openssl.sh clean
        ./compile-openssl.sh all
        
    - name: Build FFmpeg
      if: ${{ !github.event.inputs.skip_long_steps }}
      run: |
        cd ijkplayer-android/android/contrib
        ./compile-ffmpeg.sh clean
        ./compile-ffmpeg.sh all
        
    - name: Build IJKPlayer
      if: ${{ !github.event.inputs.skip_long_steps }}
      run: |
        cd ijkplayer-android/android
        ./compile-ijk.sh all
        
    - name: Update Gradle Wrapper
      working-directory: ijkplayer-android/android/ijkplayer
      run: |
        wget https://services.gradle.org/distributions/gradle-${{ env.GRADLE_VERSION }}-bin.zip
        unzip -d /opt/gradle gradle-${{ env.GRADLE_VERSION }}-bin.zip
        echo "GRADLE_HOME=/opt/gradle/gradle-${{ env.GRADLE_VERSION }}" >> $GITHUB_ENV
        echo "/opt/gradle/gradle-${{ env.GRADLE_VERSION }}/bin" >> $GITHUB_PATH
        gradle wrapper --gradle-version ${{ env.GRADLE_VERSION }}

    - name: Update build.gradle files
      working-directory: ijkplayer-android/android/ijkplayer
      run: |
        sed -i 's/com\.android\.tools\.build:gradle:1\.2\.3/com.android.tools.build:gradle:3.6.4/' build.gradle
        sed -i 's/com\.github\.dcendents:android-maven-plugin:1\.2/com.github.dcendents:android-maven-gradle-plugin:2.1/' build.gradle
        sed -i 's/classpath "com\.jfrog\.bintray\.gradle:gradle-bintray-plugin:1\.7\.3"//' build.gradle

    - name: Build Sample
      working-directory: ijkplayer-android/android/ijkplayer
      run: |
        chmod +x ./gradlew
        ./gradlew build

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ijkplayer-android
        path: ijkplayer-android/android/ijkplayer

    - name: Upload Sample APK
      uses: actions/upload-artifact@v3
      with:
        name: ijkplayer-sample-apk
        path: ijkplayer-android/android/ijkplayer/ijkplayer-example/build/outputs/apk/debug/ijkplayer-example-debug.apk
        if-no-files-found: warn
